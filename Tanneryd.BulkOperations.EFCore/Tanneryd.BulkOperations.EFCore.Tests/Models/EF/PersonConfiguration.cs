// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Tanneryd.BulkOperations.EFCore.Tests
{
    // Person
    public class PersonConfiguration : IEntityTypeConfiguration<Person>
    {
        public void Configure(EntityTypeBuilder<Person> builder)
        {
            builder.ToTable("Person", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_dbo.Person").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("nvarchar(max)").IsRequired();
            builder.Property(x => x.BirthDate).HasColumnName(@"BirthDate").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.MotherId).HasColumnName(@"MotherId").HasColumnType("bigint").IsRequired(false);
            builder.Property(x => x.EmployeeNumber).HasColumnName(@"EmployeeNumber").HasColumnType("int").IsRequired(false);

            // Foreign keys
            builder.HasOne(a => a.Mother).WithMany(b => b.People).HasForeignKey(c => c.MotherId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_dbo.Person_dbo.Person_MotherId");

            builder.HasIndex(x => x.MotherId).HasName("IX_MotherId");
        }
    }

}
// </auto-generated>
