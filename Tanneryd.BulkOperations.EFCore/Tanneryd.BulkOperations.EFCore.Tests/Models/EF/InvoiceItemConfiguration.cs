// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Tanneryd.BulkOperations.EFCore.Tests
{
    // InvoiceItem
    public class InvoiceItemConfiguration : IEntityTypeConfiguration<InvoiceItem>
    {
        public void Configure(EntityTypeBuilder<InvoiceItem> builder)
        {
            builder.ToTable("InvoiceItem", "dbo");
            builder.HasKey(x => x.PrimaryKey).HasName("PK_dbo.InvoiceItem").IsClustered();

            builder.Property(x => x.PrimaryKey).HasColumnName(@"PrimaryKey").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.JournalId).HasColumnName(@"JournalId").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.InvoiceId).HasColumnName(@"InvoiceId").HasColumnType("uniqueidentifier").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.Invoice).WithMany(b => b.Journals).HasForeignKey(c => c.InvoiceId).HasConstraintName("FK_dbo.InvoiceItem_dbo.Invoice_InvoiceId");
            builder.HasOne(a => a.Journal).WithMany(b => b.InvoiceItems).HasForeignKey(c => c.JournalId).HasConstraintName("FK_dbo.InvoiceItem_dbo.Journal_JournalId");

            builder.HasIndex(x => x.InvoiceId).HasName("IX_InvoiceId");
            builder.HasIndex(x => x.JournalId).HasName("IX_JournalId");
        }
    }

}
// </auto-generated>
