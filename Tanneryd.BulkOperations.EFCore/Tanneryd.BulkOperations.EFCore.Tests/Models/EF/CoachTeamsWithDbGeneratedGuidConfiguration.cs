// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Tanneryd.BulkOperations.EFCore.Tests
{
    // CoachTeamsWithDbGeneratedGuid
    public class CoachTeamsWithDbGeneratedGuidConfiguration : IEntityTypeConfiguration<CoachTeamsWithDbGeneratedGuid>
    {
        public void Configure(EntityTypeBuilder<CoachTeamsWithDbGeneratedGuid> builder)
        {
            builder.ToTable("CoachTeamsWithDbGeneratedGuid", "dbo");
            builder.HasKey(x => new { x.CoachId, x.TeamId }).HasName("PK_dbo.CoachTeamsWithDbGeneratedGuid").IsClustered();

            builder.Property(x => x.CoachId).HasColumnName(@"CoachId").HasColumnType("uniqueidentifier").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.TeamId).HasColumnName(@"TeamId").HasColumnType("uniqueidentifier").IsRequired().ValueGeneratedNever();

            // Foreign keys
            builder.HasOne(a => a.CoachWithDbGeneratedGuid).WithMany(b => b.CoachTeamsWithDbGeneratedGuids).HasForeignKey(c => c.CoachId).HasConstraintName("FK_dbo.CoachTeamsWithDbGeneratedGuid_dbo.CoachWithDbGeneratedGuid_CoachId");
            builder.HasOne(a => a.TeamWithDbGeneratedGuid).WithMany(b => b.CoachTeamsWithDbGeneratedGuids).HasForeignKey(c => c.TeamId).HasConstraintName("FK_dbo.CoachTeamsWithDbGeneratedGuid_dbo.TeamWithDbGeneratedGuid_TeamId");

            builder.HasIndex(x => x.CoachId).HasName("IX_CoachId");
            builder.HasIndex(x => x.TeamId).HasName("IX_TeamId");
        }
    }

}
// </auto-generated>
