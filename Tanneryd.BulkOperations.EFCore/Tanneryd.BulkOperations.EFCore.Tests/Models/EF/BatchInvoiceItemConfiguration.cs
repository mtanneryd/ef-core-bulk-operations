// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Tanneryd.BulkOperations.EFCore.Tests
{
    // BatchInvoiceItem
    public class BatchInvoiceItemConfiguration : IEntityTypeConfiguration<BatchInvoiceItem>
    {
        public void Configure(EntityTypeBuilder<BatchInvoiceItem> builder)
        {
            builder.ToTable("BatchInvoiceItem", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_dbo.BatchInvoiceItem").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"PrimaryKey").HasColumnType("uniqueidentifier").IsRequired().ValueGeneratedNever();
            builder.Property(x => x.BatchInvoiceId).HasColumnName(@"BatchInvoiceId").HasColumnType("uniqueidentifier").IsRequired();
            builder.Property(x => x.InvoiceId).HasColumnName(@"InvoiceId").HasColumnType("uniqueidentifier").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.BatchInvoice).WithMany(b => b.Invoices).HasForeignKey(c => c.BatchInvoiceId).HasConstraintName("FK_dbo.BatchInvoiceItem_dbo.BatchInvoice_BatchInvoiceId");
            builder.HasOne(a => a.Invoice).WithMany(b => b.BatchInvoices).HasForeignKey(c => c.InvoiceId).HasConstraintName("FK_dbo.BatchInvoiceItem_dbo.Invoice_InvoiceId");

            builder.HasIndex(x => x.BatchInvoiceId).HasName("IX_BatchInvoiceId");
            builder.HasIndex(x => x.InvoiceId).HasName("IX_InvoiceId");
        }
    }

}
// </auto-generated>
